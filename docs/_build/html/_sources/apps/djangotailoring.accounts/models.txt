***********************************
``djangotailoring.accounts.models``
***********************************

.. module:: djangotailoring.accounts.models

The only models that are built into ``djangotailoring.accounts`` are those
necessary for tracking and managing Group Codes.

Models
======

.. class:: GroupAccessCode
  
  Instances of this Model define what are valid access codes for the current
  site.
  
  .. attribute:: groupcode
  
    **required** A 30 character length string that is the code that users will
    use to access the site.
  
  .. attribute:: usage_limit
  
    The ceiling for the number of uses this group code can have. A
    ``usage_limit`` less than zero indicates there is no limit.
  
  .. attribute:: code_class
  
    **Not a field** Set to the
    :class:`djangotailoroing.accounts.accesscodes.Code` class that is
    used to generate and validate new codes. By default this is set to 
    :class:`djangotailoroing.accounts.accesscodes.Code`.
  
  .. method:: generate_new_subcode(self)
  
    :rtype: a :class:`djangotailoroing.accounts.accesscodes.Code` instance or
      ``None``
    :returns: a new :class:`Code` object whose :attr:`accesscode` is listed
      in the :class:`GeneratedAccessCode` class below. If the number of
      :class:`GeneratedAccessCode`\â€™s for this :class:`GroupAccessCode` is
      greater than :attr:`usage_limit`, then ``None``.
    
    .. note:: If a :class:`Code` instance is returned, the associated User
      object is not yet created.
  

.. class:: GeneratedAccessCode
  
  Provides a simple storage bucket for the codes generated by
  :class:`GroupAccessCode`.
  
  .. attribute:: accesscode
  
    The generated access code.

  .. attribute:: groupcode
  
    A foreign-key reference to the generator class.



.. class::  BasicGroupAccessCode

  A proxy class of :class:`GroupAccessCode` that set the :attr:`code_class`
  attribute to :class:`djangotailoring.accounts.accesscodes.BasicAccessCode`.

